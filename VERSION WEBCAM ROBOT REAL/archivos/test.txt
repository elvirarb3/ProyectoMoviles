echo "ROS_MASTER_URI=http://192.168.1.8:11311" >> ~/.bashrc
echo "ROS_HOSTNAME=192.168.1.255" >> ~/.bashrc

ssh turtlebot@192.168.1.8

Tenemos 3 codigos:

SendImageToTopic.py: usa la imagen de la camara y al envia al topic de detect_image_output para que otro codigo la lea

ColorCapture.py --> se subscribe al topic detect_image_output y detecta si hay circuclos de colores 

CameraCapture.py: tiene dentro el topic que usa el turtlebot real pero tambiem se puede usar con la camara del ordenador


GoToMapPoint.py  

Primero pegamos los archivos del mapa en la raiz del sistema y les cambiamos el path del archivo yaml
Para que esto funcione necesitamos runnear los modulos de navigation map de ros pero tambien necesitamos un mapa: 	
	export TURTLEBOT3_MODEL=burger
	roslaunch turtlebot3_navigation turtlebot3_navigation.launch map_file:=$HOME/mapa2.yaml
	
	Tenemos que ajustar el robot a la pose inicial con el  
		topic /inicialpose 
		tipo geometry_msgs/PoseWithCovarianceStamped (rosmsg info geometry_msgs/PoseWithCovarianceStamped)
	Descubrimos la pose inicial usando rviz y haciendo en una terminal rostopic echo /initialpose
		header: 
		  seq: 7
		  stamp: 
		    secs: 1651
		    nsecs: 122000000
		  frame_id: "map"
		pose: 
		  pose: 
		    position: 
		      x: -1.5199998617172241
		      y: 0.13000015914440155
		      z: 0.0
		    orientation: 
		      x: 0.0
		      y: 0.0
		      z: -5.9604637669963234e-08
		      w: 0.9999999999999982
		  covariance: [0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06853892326654787]

	Publicamos la pose siempre que empecemos el programa para no tener que ajustar la pose siempre a mano
	ESta es la pose para ell mapa de la casa 
		rostopic pub /initialpose geometry_msgs/PoseWithCovarianceStamped "header:
	  seq: 0
	  stamp:
	    secs: 0
	    nsecs: 0
	  frame_id: 'map'
	pose:
	  pose:
	    position: {x: -1.5199998617172241, y: 0.13000015914440155, z: 0.0}
	    orientation: {x: 0.0, y: 0.0, z: -5.9604637669963234e-08, w: 0.9999999999999982}
	  covariance: [0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
	    0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 
	    0.0, 0.0, 0.0, 0.0, 0.0, 0.06853892326654787]" 

Tambien hay que runerar la simulacion de gazebo:

	export TURTLEBOT3_MODEL=burger
	roslaunch turtlebot3_gazebo turtlebot3_house.launch
		
En una tercera terminal lanzamos el codigo, este codigo se ha modificado para subscribirse al topic /desire_position que nos dira el numero del posicion a la que nos vamos a mover y recibir un mensaje PoseStamped que se enviara como goal al stak de navegacion : 
	python3 GoToMapPoint.py  
	

	 
 



